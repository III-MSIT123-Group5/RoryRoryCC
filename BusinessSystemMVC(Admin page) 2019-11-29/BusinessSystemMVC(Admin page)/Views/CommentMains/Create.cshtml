@model BusinessSystemMVC_Admin_page_.Models.CommentMain

@{
    //Layout = null;

    var commentContentItems = ViewBag.CommentContentItems as List<GroupedSelectListItem>;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <style>

        label {
            font-family: 'NotoSansCJKtc-Bold';
        }
    </style>


    
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.CommentMainID)
        @Html.HiddenFor(model => model.EmployeeID)
        @Html.HiddenFor(model => model.SendTime)

        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.CommentContentID, "意見類型", htmlAttributes: new { @class = "control-label col-md-2 label" })
                <div class="col-md-10">
                    @Html.DropDownGroupList("CommentContent", commentContentItems, "請選擇意見類型", htmlAttributes: new { @class = "label" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CommentName, "意見名稱", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CommentName, new { htmlAttributes = new { @class = "form-control", style = "Width:400px" } })
                    @Html.ValidationMessageFor(model => model.CommentName, "", new { @class = "text-danger" })
                </div>
            </div>

            <select class="multiselect" multiple="multiple"></select>


            @*<div class="form-horizontal">
                <h4>CommentMain</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.CommentMainID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CommentMainID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommentMainID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CommentName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CommentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeID, "EmployeeID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("EmployeeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SendTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SendTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CommentContentID, "CommentContentID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CommentContentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommentContentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ActivityMainID, "ActivityMainID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ActivityMainID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ActivityMainID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="reset" value="清除" class="btn btn-warning" style="margin-right:10px" />
                    <input type="submit" value="送出貼文" class="btn btn-success" style="margin-right:10px" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <link rel="stylesheet" href="~/Content/bootstrap-multiselect.css" type="text/css">

    @section scripts{

        <script src="~/Scripts/bootstrap-multiselect.js"></script>
        <script>

                $(document).ready(function () {

                    $.ajax({
                        url:'@Url.Action("LoadEmployee", "CommentMains")',
                        method: 'GET',
                        dataType: 'json'
                    })
                    .done(function(datas) {

                        for (var i = 0; i < datas.length; i++) {

                            $('.multiselect').append("<option value=" + datas[i].name + ">" + datas[i].name+"</option>");

                        }
                    })
                        //"columnDefs": [

                        //    { "targets": 0, "data": "CommentMainID", "width": "60px" },
                        //    { "targets": 1, "data": "CommentContent1", "width": "60px" },
                        //    { "targets": 2, "data": "CommentName", "width": "200px" },
                        //    { "targets": 3, "data": "EmployeeName", "width": "60px" },
                        //    { "targets": 4, "data": "SendTime", "render": function (data) { return moment(data).format("YYYY-MM-DD HH:mm:ss") }, "width": "100px" },
                        //    {
                        //        "targets": 5, "data": "CommentMainID", "render": function (data) {
                        //            return "<a class='btn btn-warning btn-sm' onclick=PopupForm('/CommentMains/AddOrEdit/" + data + "')><i class='fa fa-pencil'></i> 編輯</a><a class='btn btn-danger btn-sm' style='margin-left:5px' onclick=Delete(" + data + ")><i class='fa fa-trash'></i> 刪除</a>"
                        //        },
                        //        "orderable": false,
                        //        "searchable": false,
                        //        "width": "100px"
                        //    }

                        //],
                    //});
                   
                 });

            $('.multiselect').multiselect();

        </script>

    }
</body>
</html>
