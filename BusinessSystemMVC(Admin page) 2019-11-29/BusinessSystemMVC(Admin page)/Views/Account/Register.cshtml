@model BusinessSystemMVC_Admin_page_.Models.RegisterViewModel
@{
    ViewBag.Title = "新增員工帳號";
}

<style>
    button, h2, h4 {
        font-family: 'NotoSansCJKtc-Bold';
    }

    th {
        font-family: 'NotoSansCJKtc-Bold';
    }

    td {
        font-family: '微軟正黑體';
        font-weight: 600;
    }

    .form-control-2 {
        width: 100%;
        height: calc(1.5em + 0.75rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
</style>

<br />
    <h2>@ViewBag.Title   </h2>    
<br />
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>建立新的帳戶</h4>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <hr />
    <div class="container-fluid" style="margin-top:30px">
        <div class="row">
            <div class="col-lg-5">
                <div class="form-group">
                    @Html.LabelFor(m => m.EmpoyeeName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.EmpoyeeName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmpoyeeName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Account, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Account, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("Gender", null, "--請選擇--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("生日", new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.BirthDay, new { @id = "BirthDay", @name = "BirthDay", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-lg-5">
                <div class="form-group">
                    @Html.LabelFor(m => m.HireDay, new { @id = "BirthDay", @name = "BirthDay", @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.HireDay, new { @id = "HireDay", @name = "HireDay", @class = "form-control", })
                        @Html.ValidationMessageFor(model => model.HireDay, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.OfficeID, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("OfficeID", null, "--請選擇--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.DepartmentID, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("DepartmentID", null, "--請選擇--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.GroupID, new { @class = "col-md-2 control-label" })   @*//連動department*@
                    <div class="col-md-10">
                        <div id="DivGroup">
                            @Html.DropDownList("GroupID", null, "--請選擇--", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.PositionID, new { @class = "col-md-2 control-label" })     @*//連動group*@
                    <div class="col-md-10">
                        <div id="DivPosition">
                            @Html.DropDownList("PositionID", null, "--請選擇--", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ManagerID, new { @class = "col-md-2 control-label" })     @*//依上述查主管名*@
                    <div class="col-md-10">
                        <div id="DivManagerID">
                            @Html.DropDownList("ManagerID", null, "--請選擇--", new { @class = "form-control", id = "IDManageIDst" })
                        </div>
                        @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Employed, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.DropDownList("Employed", null, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group" style="text-align:center">
            <div class="col-md-11">
                <input id="RegisterSubmit" type="submit" class="btn btn-primary" value="註冊" />
                <button type="button" class="btn btn-info" style="background-color:	#a5a5af; border-color:transparent" onclick=Demo()>
                    Demo
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        function Demo() {
            $('#EmpoyeeName').val('戴普');
            $('#Account').val('johnny');
            $('#Password').val('@@Aa123');
            $('#ConfirmPassword').val('@@Aa123');
            $('#Email').val('johnny@@msit.com');
        }

        $(document).ready(function () {
            $("#BirthDay").datepicker({
                maxDate: "-18y",
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true
            });
            $("#HireDay").datepicker({
                dateFormat: "yy/mm/dd",
                changeMonth: true,
                changeYear: true
            })

        });


        $("#DepartmentID").bind("change", function () {
            UpdateGroupStor();
            UpdatePosiStor();
        });

        function UpdateGroupStor() {
            $.ajax({
                type:"Post",
                url: "@Url.Action("GetGrpIDbyDeptID", "Account")/" + DepartmentID.value ,
            }).done(function (data) {
                $("#DivGroup").html(data);
                }).fail(function (e) {
                    alert(e.readyState);
                });
        }
        function UpdatePosiStor() {
            $.ajax({
                type: "Post",
                url: "@Url.Action("GetPosiIDbyDeptID", "Account")/" + DepartmentID.value,
            }).done(function (data) {
                $("#DivPosition").html(data);
                $("#PositionID").bind("change", function () {
                    UpateManageStor();
                });
                }).fail(function (e) {
                    alert(e.readyState);
                });
        }
        function UpateManageStor() {
            $.ajax({
                type: "Post",
                data: {
                    DepartmentID: DepartmentID.value,
                    GroupID: GroupID.value,
                    PositionID: PositionID.value
                },
                url: "@Url.Action("GetManagerID", "Account")"  ,
            }).done(function (datas) {
                $("#IDManageIDst").empty();
                datas.forEach(function (item) {
                    var ops = new Option(item.EmployeeName, item.employeeID);
                    $("#IDManageIDst").append(ops);
                });
            }).fail(function (e) {
                alert(e.readyState);
            });
        }



    </script>

    @if (TempData["message"] != null)
    {
        <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(TempData["message"]));
        alert(message);
        </script>
    }
}
