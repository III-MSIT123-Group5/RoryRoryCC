@model BusinessSystemMVC_Admin_page_.Models.RegisterViewModel
@{
    /**/

   ViewBag.Title = "新增員工帳號";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>建立新的帳戶</h4>
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.EmpoyeeName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.EmpoyeeName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmpoyeeName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Account, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Account, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Gender", null, "--請選擇--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("生日", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("BirthYear", null, new { @class = "form-control", @style = "width:90px" })
            @Html.DropDownList("BirthMonth", null, new { @class = "form-control", @style = "width:70px" })
            @Html.DropDownList("BirthDate", null, new { @class = "form-control", @style = "width:70px" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.HireDay, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.HireDay, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.HireDay, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.OfficeID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("OfficeID", null, "--請選擇--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OfficeID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DepartmentID, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("DepartmentID", null, "--請選擇--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GroupID, new { @class = "col-md-2 control-label" })   @*//連動department*@
        <div class="col-md-10">
            <div id="DivGroup">
                @Html.DropDownList("GroupID", null, "--請選擇--", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.GroupID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PositionID, new { @class = "col-md-2 control-label" })     @*//連動group*@
        <div class="col-md-10">
            <div id="DivPosition">
                @Html.DropDownList("PositionID", null, "--請選擇--", new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ManagerID, new { @class = "col-md-2 control-label" })     @*//依上述查主管名*@
        <div class="col-md-10">
            <div id="DivManagerID">
                @Html.DropDownList("ManagerID", null, "--請選擇--", new { @class = "form-control", id = "IDManageIDst" })
            </div>
            @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Employed, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Employed", null, new { @class = "form-control", @disabled = "disabled" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="RegisterSubmit" type="submit" class="btn btn-primary" value="註冊" />
            <input id="test" type="button" class="btn btn-default" value="test" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#DepartmentID").bind("change", function () {
            UpdateGroupStor();
            UpdatePosiStor();
        });

        $("#test").bind("click", function () {
            HTMLModElement.BirthDay = DTPBirth.value;
            alert(HTMLModElement.BirthDay);
        });

        $("#BirthMonth").bind("change", function () {
            $("#BirthDate").empty();
            for (let i = 1; i <= getDays(); i++) {
                var ops = new Option(i, i);
                $("#BirthDate").append(ops);
            }
        });

        function getDays() {
            var yy = $("#BirthYear").val();
            var mm = $("#BirthMonth").val();
            var dd = new Date(yy, mm, 0);
            var days = dd.getDate();
            return days;
            }

        function UpdateGroupStor() {
            $.ajax({
                type:"Post",
                url: "@Url.Action("GetGrpIDbyDeptID", "Account")/" + DepartmentID.value ,
            }).done(function (data) {
                $("#DivGroup").html(data);
                }).fail(function (e) {
                    alert(e.readyState);
                });
        }
        function UpdatePosiStor() {
            $.ajax({
                type: "Post",
                url: "@Url.Action("GetPosiIDbyDeptID", "Account")/" + DepartmentID.value,
            }).done(function (data) {
                $("#DivPosition").html(data);
                $("#PositionID").bind("change", function () {
                    UpateManageStor();
                });
                }).fail(function (e) {
                    alert(e.readyState);
                });
        }
        function UpateManageStor() {
            $.ajax({
                type: "Post",
                data: {
                    DepartmentID: DepartmentID.value,
                    GroupID: GroupID.value,
                    PositionID: PositionID.value
                },
                url: "@Url.Action("GetManagerID", "Account")"  ,
            }).done(function (datas) {
                $("#IDManageIDst").empty();
                datas.forEach(function (item) {
                    var ops = new Option(item.EmployeeName, item.employeeID);
                    $("#IDManageIDst").append(ops);
                });
            }).fail(function (e) {
                alert(e.readyState);
            });
        }



    </script>

    @if (TempData["message"] != null)
    {
        <script type="text/javascript">
        var message = @Html.Raw(Json.Encode(TempData["message"]));
        alert(message);
        </script>
    }
}
